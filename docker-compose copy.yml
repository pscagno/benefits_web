version: "3.9"
services:
  postgres14:
    image: postgres:14-alpine
    ports:
      - "5532:5432"
    environment:
      POSTGRES_PASSWORD: "123456"
      POSTGRES_DB: "benefits"
    volumes:
      - data-postgres:/var/lib/postgres/data
    restart: always
    networks:
      - macro
  model:
    build:
      context: ./
      dockerfile: ./model/Dockerfile
    ports:
      - "8001:8001"
    env_file: ./model/model/.env
    networks:
      - macro
    depends_on:
      - postgres14
    restart: always
  web:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/proxy.conf:/etc/nginx/conf.d/proxy.conf.template
      - ./nginx/certs:/etc/nginx/ssl/
      - ./nginx/snippets:/etc/nginx/snippets/
    links:
      - react-app
      - model
    networks:
      - macro
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost} #Â Example: benefits.com
      WEB_SERVER_NAME: ${WEB_SERVER_NAME:-localhost} # Example: www.benefits.com
    command: /bin/bash -c "envsubst '$$SERVER_NAME,$$WEB_SERVER_NAME' < /etc/nginx/conf.d/proxy.conf.template > /etc/nginx/conf.d/proxy.conf && nginx -g 'daemon off;'"
  react-app:
    build:
      context: ./
      dockerfile: ./web/Dockerfile
    deploy:
      resources:
        limits:
          memory: 250M
    networks:
      - macro
volumes:
  data-postgres:
networks:
  macro:
