server {
    listen 443 ssl;
    listen [::]:443 ssl;

    # TODO: Rename server_name
    server_name web web;

    #Â Configuring Nginx to use SSL 
    include snippets/ssl-params.conf;
    ssl_certificate  /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    location /api {
        # Transform /api/v1/* -> /v1/* 
        rewrite /api/(.*) /$1  break;
        # TODO: Configure proxy_pass variable instead
        proxy_pass http://model:8001;
        proxy_http_version 1.1;

		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
    }

    location / {
        # TODO: Configure proxy_pass variable instead
        proxy_pass http://web:82;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
        
}

server {
    server_name admin admin;
           
    location /admin/ {
        # Transform /admin/v1/* -> /v1/* 
        rewrite /admin/(.*) /$1  break;
        # TODO: Configure proxy_pass variable instead
        proxy_pass http://admin:81/;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }  
}

server {
    listen 82;
    listen [::]:82;

    # TODO: Rename server_name
    server_name web web;

    # Redirecting HTTP -> HTTPS 
    return 301 https://localhost:82$request_uri;
}

server {
    listen 81;
    listen [::]:81;

    # TODO: Rename server_name
    server_name admin admin;

    # Redirecting HTTP -> HTTPS 
    return 301 https://localhost:81$request_uri;
}
